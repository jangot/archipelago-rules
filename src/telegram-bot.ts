import TelegramBot from 'node-telegram-bot-api';
import { configuration } from './configuration';
import { searchRelevantChunks } from './qdrant';
import { getAIResponse } from './openai-api';
import { userAccessManager } from './user-access';

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
const bot = new TelegramBot(configuration.telegramToken, { polling: true });

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, async (msg) => {
    const chatId = msg.chat.id;
    const welcomeMessage = `
üåä –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê—Ä—Ö–∏–ø–µ–ª–∞–≥ Rules Bot!

–Ø –ø–æ–º–æ–≥—É –≤–∞–º –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º –∏–≥—Ä—ã "–ê—Ä—Ö–∏–ø–µ–ª–∞–≥" (2d20). –ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π—Ç–µ –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –æ –ø—Ä–∞–≤–∏–ª–∞—Ö, –∏ —è –Ω–∞–π–¥—É —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö.

–ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:
‚Ä¢ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞?
‚Ä¢ –ö–∞–∫–∏–µ –∞—Ä—Ö–µ—Ç–∏–ø—ã –¥–æ—Å—Ç—É–ø–Ω—ã?
‚Ä¢ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–∞–≤—ã–∫–∏?
‚Ä¢ –ö–∞–∫–∏–µ –∞—Ç—Ä–∏–±—É—Ç—ã –≤–∞–∂–Ω—ã?

–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å! ‚öîÔ∏è
    `;

    await bot.sendMessage(chatId, welcomeMessage);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
bot.onText(/\/help/, async (msg) => {
    const chatId = msg.chat.id;
    const helpMessage = `
üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:

üîç –ö–∞–∫ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å:
–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –æ –ø—Ä–∞–≤–∏–ª–∞—Ö –∏–≥—Ä—ã "–ê—Ä—Ö–∏–ø–µ–ª–∞–≥" (2d20) –≤ —á–∞—Ç.

üìñ –ß—Ç–æ —è —É–º–µ—é:
‚Ä¢ –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º –∏–≥—Ä—ã "–ê—Ä—Ö–∏–ø–µ–ª–∞–≥"
‚Ä¢ –ò—Å–∫–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö
‚Ä¢ –û–±—ä—è—Å–Ω—è—Ç—å –º–µ—Ö–∞–Ω–∏–∫–∏ –∏–≥—Ä—ã
‚Ä¢ –ü–æ–º–æ–≥–∞—Ç—å —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π

üí° –ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:
‚Ä¢ "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞?"
‚Ä¢ "–ö–∞–∫–∏–µ –∞—Ä—Ö–µ—Ç–∏–ø—ã –¥–æ—Å—Ç—É–ø–Ω—ã?"
‚Ä¢ "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–∞–≤—ã–∫–∏?"
‚Ä¢ "–ß—Ç–æ —Ç–∞–∫–æ–µ –∞—Ç—Ä–∏–±—É—Ç—ã?"

üéØ –ö–æ–º–∞–Ω–¥—ã:
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/users - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)

–£–¥–∞—á–Ω–æ–π –∏–≥—Ä—ã! ‚öîÔ∏è
    `;

    await bot.sendMessage(chatId, helpMessage);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /users –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
bot.onText(/\/users/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = String(msg.from?.id || '');
    const userName = msg.from?.username || '';

    // –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫
    if (!userAccessManager.isAdmin(userId, userName)) {
        await bot.sendMessage(chatId, '‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.');
        return;
    }

    const stats = userAccessManager.getStats();
    const activeUsers = userAccessManager.getActiveUsers();

    let userList = '';
    if (activeUsers.length > 0) {
        userList = activeUsers.map(user =>
            `‚Ä¢ ${user.username || '–ë–µ–∑ username'} (ID: ${user.id}) - –¥–æ–±–∞–≤–ª–µ–Ω ${new Date(user.addedAt).toLocaleDateString()}`
        ).join('\n');
    } else {
        userList = '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π';
    }

    const adminMessage = `
üë• **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏**

üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${stats.total}
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö: ${stats.active}
‚Ä¢ –ù–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö: ${stats.inactive}
‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${new Date(stats.lastUpdated).toLocaleString()}

üë§ **–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:**
${userList}

üí° **–ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:**
/adduser @username - –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
/removeuser @username - –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
/activateuser @username - –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
/deleteuser @username - –ü–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    `;

    await bot.sendMessage(chatId, adminMessage, { parse_mode: 'Markdown' });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /adduser
bot.onText(/\/adduser (.+)/, async (msg, match) => {
    const chatId = msg.chat.id;
    const userId = String(msg.from?.id || '');
    const userName = msg.from?.username || '';
    if (!userAccessManager.isAdmin(userId, userName)) {
        await bot.sendMessage(chatId, '‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.');
        return;
    }

    if (!match) {
        await bot.sendMessage(chatId, '‚ùå –£–∫–∞–∂–∏—Ç–µ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /adduser @username');
        return;
    }

    const newUsername = match[1].replace('@', '').trim();

    if (!newUsername) {
        await bot.sendMessage(chatId, '‚ùå –£–∫–∞–∂–∏—Ç–µ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /adduser @username');
        return;
    }

    const success = userAccessManager.addUser({
        id: '', // ID –±—É–¥–µ—Ç –ø—É—Å—Ç—ã–º, –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å –ø–æ username
        username: newUsername,
        addedBy: userName || userId
    }, userName || userId);

    if (success) {
        await bot.sendMessage(chatId, `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${newUsername} –¥–æ–±–∞–≤–ª–µ–Ω!`);
    } else {
        await bot.sendMessage(chatId, `‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${newUsername} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.`);
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /removeuser
bot.onText(/\/removeuser (.+)/, async (msg, match) => {
    const chatId = msg.chat.id;
    const userId = String(msg.from?.id || '');
    const userName = msg.from?.username || '';
    if (!userAccessManager.isAdmin(userId, userName)) {
        await bot.sendMessage(chatId, '‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.');
        return;
    }

    if (!match) {
        await bot.sendMessage(chatId, '‚ùå –£–∫–∞–∂–∏—Ç–µ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /removeuser @username');
        return;
    }

    const targetUsername = match[1].replace('@', '').trim();

    if (!targetUsername) {
        await bot.sendMessage(chatId, '‚ùå –£–∫–∞–∂–∏—Ç–µ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /removeuser @username');
        return;
    }

    const success = userAccessManager.removeUser('', targetUsername);

    if (success) {
        await bot.sendMessage(chatId, `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${targetUsername} –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!`);
    } else {
        await bot.sendMessage(chatId, `‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${targetUsername} –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.`);
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /activateuser
bot.onText(/\/activateuser (.+)/, async (msg, match) => {
    const chatId = msg.chat.id;
    const userId = String(msg.from?.id || '');
    const userName = msg.from?.username || '';
    if (!userAccessManager.isAdmin(userId, userName)) {
        await bot.sendMessage(chatId, '‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.');
        return;
    }

    if (!match) {
        await bot.sendMessage(chatId, '‚ùå –£–∫–∞–∂–∏—Ç–µ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /activateuser @username');
        return;
    }

    const targetUsername = match[1].replace('@', '').trim();

    if (!targetUsername) {
        await bot.sendMessage(chatId, '‚ùå –£–∫–∞–∂–∏—Ç–µ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /activateuser @username');
        return;
    }

    const success = userAccessManager.activateUser('', targetUsername);

    if (success) {
        await bot.sendMessage(chatId, `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${targetUsername} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!`);
    } else {
        await bot.sendMessage(chatId, `‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${targetUsername} –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.`);
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /deleteuser
bot.onText(/\/deleteuser (.+)/, async (msg, match) => {
    const chatId = msg.chat.id;
    const userId = String(msg.from?.id || '');
    const userName = msg.from?.username || '';
    if (!userAccessManager.isAdmin(userId, userName)) {
        await bot.sendMessage(chatId, '‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç —É–¥–∞–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.');
        return;
    }

    if (!match) {
        await bot.sendMessage(chatId, '‚ùå –£–∫–∞–∂–∏—Ç–µ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /deleteuser @username');
        return;
    }

    const targetUsername = match[1].replace('@', '').trim();

    if (!targetUsername) {
        await bot.sendMessage(chatId, '‚ùå –£–∫–∞–∂–∏—Ç–µ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /deleteuser @username');
        return;
    }

    const success = userAccessManager.deleteUser('', targetUsername);

    if (success) {
        await bot.sendMessage(chatId, `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${targetUsername} –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª—ë–Ω!`);
    } else {
        await bot.sendMessage(chatId, `‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${targetUsername} –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.`);
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /setadmin
bot.onText(/\/setadmin (.+)/, async (msg, match) => {
    const chatId = msg.chat.id;
    const userId = String(msg.from?.id || '');
    const userName = msg.from?.username || '';
    if (!userAccessManager.isAdmin(userId, userName)) {
        await bot.sendMessage(chatId, '‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –Ω–∞–∑–Ω–∞—á–∞—Ç—å –¥—Ä—É–≥–∏—Ö –∞–¥–º–∏–Ω–æ–≤.');
        return;
    }
    if (!match) {
        await bot.sendMessage(chatId, '‚ùå –£–∫–∞–∂–∏—Ç–µ username: /setadmin @username');
        return;
    }
    const targetUsername = match[1].replace('@', '').trim();
    const success = userAccessManager.setAdmin('', targetUsername, true);
    if (success) {
        await bot.sendMessage(chatId, `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${targetUsername} —Ç–µ–ø–µ—Ä—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
    } else {
        await bot.sendMessage(chatId, `‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${targetUsername} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /unsetadmin
bot.onText(/\/unsetadmin (.+)/, async (msg, match) => {
    const chatId = msg.chat.id;
    const userId = String(msg.from?.id || '');
    const userName = msg.from?.username || '';
    if (!userAccessManager.isAdmin(userId, userName)) {
        await bot.sendMessage(chatId, '‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç —Å–Ω–∏–º–∞—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.');
        return;
    }
    if (!match) {
        await bot.sendMessage(chatId, '‚ùå –£–∫–∞–∂–∏—Ç–µ username: /unsetadmin @username');
        return;
    }
    const targetUsername = match[1].replace('@', '').trim();
    const success = userAccessManager.setAdmin('', targetUsername, false);
    if (success) {
        await bot.sendMessage(chatId, `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${targetUsername} –±–æ–ª—å—à–µ –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!`);
    } else {
        await bot.sendMessage(chatId, `‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${targetUsername} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', async (msg) => {
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
    if (msg.text?.startsWith('/')) {
        return;
    }

    const chatId = msg.chat.id;
    const question = msg.text;

    if (!question) {
        await bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ –ø—Ä–∞–≤–∏–ª–∞—Ö –∏–≥—Ä—ã "–ê—Ä—Ö–∏–ø–µ–ª–∞–≥" (2d20).');
        return;
    }

    console.log(msg.from)
    const userName = msg.from?.username || '';
    const userId = String(msg.from?.id || '');
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É
        if (!userAccessManager.hasAccess(userId, userName)) {
            console.log(`No access: ${userName} | ${userId}`)
            await bot.sendMessage(chatId, 'üòø –ò–∑–≤–∏–Ω–∏—Ç–µ, –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±—Å–ª—É–∂–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º @jangot –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞.');
            return;
        }
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –±–æ—Ç –¥—É–º–∞–µ—Ç
        const thinkingMessage = await bot.sendMessage(chatId, 'ü§î –ò—â—É –æ—Ç–≤–µ—Ç –≤ –ø—Ä–∞–≤–∏–ª–∞—Ö –ê—Ä—Ö–∏–ø–µ–ª–∞–≥–∞...');

        console.log(`üîç –ü–æ–∏—Å–∫ –ø–æ –≤–æ–ø—Ä–æ—Å—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userName || msg.from?.first_name}: "${question}"`);

        // –ò—â–µ–º —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã
        const searchResults = await searchRelevantChunks(question);

        if (searchResults.length === 0) {
            await bot.editMessageText('‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –Ω–∞—à–µ–ª —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –≤–∞—à–µ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –ø—Ä–∞–≤–∏–ª–∞—Ö –∏–≥—Ä—ã "–ê—Ä—Ö–∏–ø–µ–ª–∞–≥". –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å.', {
                chat_id: chatId,
                message_id: thinkingMessage.message_id
            });
            return;
        }

        // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç AI
        await bot.editMessageText('üß† –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –Ω–∞–π–¥–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é...', {
            chat_id: chatId,
            message_id: thinkingMessage.message_id
        });

        const aiResponse = await getAIResponse(question, searchResults);

        // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        const formattedResponse = `
üìñ **–û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å:**

${aiResponse}

---
üí° *–ò—Å—Ç–æ—á–Ω–∏–∫–∏: –Ω–∞–π–¥–µ–Ω–æ ${searchResults.length} —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤ –∏–∑ –ø—Ä–∞–≤–∏–ª –∏–≥—Ä—ã "–ê—Ä—Ö–∏–ø–µ–ª–∞–≥"*
        `;

        await bot.editMessageText(formattedResponse, {
            chat_id: chatId,
            message_id: thinkingMessage.message_id,
            parse_mode: 'Markdown'
        });

        console.log(`‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${msg.from?.username || msg.from?.first_name}`);

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);

        const errorMessage = '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –æ—Ç–≤–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ.';

        if (msg.message_id) {
            await bot.editMessageText(errorMessage, {
                chat_id: chatId,
                message_id: msg.message_id
            });
        } else {
            await bot.sendMessage(chatId, errorMessage);
        }
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
bot.on('error', (error) => {
    console.error('–û—à–∏–±–∫–∞ Telegram –±–æ—Ç–∞:', error);
});

bot.on('polling_error', (error) => {
    console.error('–û—à–∏–±–∫–∞ polling Telegram –±–æ—Ç–∞:', error);
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
console.log('ü§ñ –ê—Ä—Ö–∏–ø–µ–ª–∞–≥ Rules Bot –∑–∞–ø—É—â–µ–Ω...');
console.log('üì± –ë–æ—Ç –≥–æ—Ç–æ–≤ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã!');

// Graceful shutdown
process.on('SIGINT', () => {
    console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –±–æ—Ç–∞...');
    bot.stopPolling();
    process.exit(0);
});

process.on('SIGTERM', () => {
    console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –±–æ—Ç–∞...');
    bot.stopPolling();
    process.exit(0);
});
